ㅇ 실제 장고에서 제공해주는 패키지 
-> django-admin startproject config .

ㅇ setting.py 를 settings라는 폴더를 두고 그 아래로 옮겨서 base.py로 변환
=> 파일관리를 수월하게 하기 위함

** 마이그레이션 
- 장고에서 마이그레이션이란, 데이터베이스에 적용시켜야 하는 변화에 대한 기록.
 ex) 블로그에 댓글 작성 기능을 추가할 경우, '댓글' db table이 생성되어 있어야 하는것.

 

ㅇ django 마이그레이션 / 장고가 사용하는 db table이 이미 있고, 땡겨오는것
=> python manage.py migrate --setings=config.settings.local
   => migrate ; DB table을 복사하는것
  => postgres explore <<(vscode 확장 앱) 에서 방금 생성한 
  포스트그레 local host, port, 아이디 비번 이름 해서 등록하면 보임!! 와우


  >> docker run -d --cap-add SYS_ADMIN --privileged --name jeby-2021-centos -p 80:80 -p 2222:22 -it -e container=docker -v /sys/fs/cgroup:/sys/fs/cgroup mysite_test /usr/sbin/init

ㅇ yum install -y which nano git gcc   << which 라는 명령어 쓰면 nano, git, gcc  각 패키지 3개를 한번에 설치할 수 있다



FROM centos7
ENV container docker
RUN yum -y update; yum clean all
RUN yum -y install systemd; yum clean all; \
(cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
rm -f /lib/systemd/system/multi-user.target.wants/*;\
rm -f /etc/systemd/system/*.wants/*;\
rm -f /lib/systemd/system/local-fs.target.wants/*; \
rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
rm -f /lib/systemd/system/basic.target.wants/*;\
rm -f /lib/systemd/system/anaconda.target.wants/*;
VOLUME [ "/sys/fs/cgroup" ]
CMD ["/usr/sbin/init"]

#### 맥OS는 centos vm을 띄우고 거기에 Docker를 깔아야함... ,, 컨테이너가 바로 macos에 다이렉트로 안붙음..

debug=false일때는 접속이 안됨. 
리모트환경 (localhost/admin)

[장고의 MTV 패턴]
홈페이지 -> url.py에서 언급하는 함수 -> views.py (함수, 클래스 정의) -> models.py (게시글이 담아야 할 정보, 내용) -> database 

mysite : 장고 프로젝트 루트 디렉토리

** 스프링은 디렉토리 구조가 깊어지는 편이라면, 장고프로젝트는 2~3단계 내에서 해결하는 구조.


** templates폴더/base.html << 최종적으로 사용하는 모든 Html의 공통 내용이 들어가있다고 보면됨. (다른 페이지들이 이 페이지를 상속받을거임!)
 -> {% block title %}Jeby{% endblock title %}   << block으로 하면 디폴트로는 이거쓰는데 다른페이지에서는 다른거 써도됨..

** static 폴더 하위 'bootstrap, image, jquery'

mysite
 ㄴCommon
 ㄴconfig
 ㄴstatic
 ㄴtemplates

 공통적으로 적용되는 템플릿 > ㅑㅜ

** 장고 철학 : 프론트엔드 템플릿엔 로직이 들어가면 안된다....
모든 로직은 백엔드에서 만든다...


** config > settings> asgi.py (장고 내장서버)
 => 이번 실습에서는 내장서버 안쓰고 scripts 로 만들어서 배포하겟다
 

# 스크립트 파일 대신 cmd 파일에 직접 타이핑하기
python3 manage.py runserver 0:8000 --settings=config.settings.local


1. django-admin startapp news
2. config> settings > base.py -  installed app에 news 추가 
   config > urls.py 에 News 경로 추가
3. 

